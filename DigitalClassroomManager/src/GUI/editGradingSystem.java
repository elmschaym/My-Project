/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Classes;
import model.CurrentUser;
import model.GradingSystem;
import service.implementations.ClassServiceImplementation;
import service.implementations.GradingSystemServiceImplementation;
import service.interfaces.ClassServiceInterface;
import service.interfaces.GradingSystemServiceInterface;
import tools.ErrorException;
import tools.Transparent;

/**
 *
 * @author sam
 */
public class editGradingSystem extends javax.swing.JDialog {

    private javax.swing.JFrame parentFrame;
    private int pPercentage = 100;
    /**
     * Creates new form printRecord
     */
    private CurrentUser userCurrent;

    public editGradingSystem(java.awt.Frame parent, boolean modal, CurrentUser currentUser) {
        super(parent, modal);
        Transparent trans = new Transparent();
        trans.TransparentDForm(this);
        initComponents();
        this.setSize(500, 500);
        this.setLocationRelativeTo(null);
        userCurrent = currentUser;
        setGradingSystemView();
        this.parentFrame = (JFrame) parent;
    }

    public void setGradingSystemView() {
        int totalPercentage = 0;
        DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        ClassServiceInterface clasService=new ClassServiceImplementation();
        Classes sd=new Classes();
        GradingSystemServiceInterface gradingService = new GradingSystemServiceImplementation();
        ArrayList<GradingSystem> gradingSearch = new ArrayList<>();
        try {
            sd=clasService.getPercentage(userCurrent.getClassID());
            gradingSearch = gradingService.getGradingSystem(userCurrent.getClassID());
        } catch (ErrorException ex) {
            ex.printStackTrace();
        }
        for (GradingSystem temp : gradingSearch) {
            model.addRow(new Object[]{temp.getEntryName(), temp.getPercentage()});
            pPercentage = pPercentage - Integer.parseInt(temp.getPercentage());
            totalPercentage += Integer.parseInt(temp.getPercentage());
        }
        percentageField.setText(""+sd.getPercentage());


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        save = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        percentageField = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Entry Name", "Percentage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(1).setMinWidth(80);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(80);

        jPanel1.add(jScrollPane8);
        jScrollPane8.setBounds(130, 140, 240, 290);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/save.jpg"))); // NOI18N
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel1.add(save);
        save.setBounds(380, 360, 100, 30);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cancel.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(380, 400, 100, 30);

        jLabel1.setFont(new java.awt.Font("DK Crayon Crumble", 0, 18));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Passing Rate");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(150, 440, 130, 19);

        percentageField.setFont(new java.awt.Font("Arial", 0, 15));
        jPanel1.add(percentageField);
        percentageField.setBounds(270, 440, 100, 24);

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Untitled-1.png"))); // NOI18N
        jPanel1.add(jLabel33);
        jLabel33.setBounds(0, 0, 500, 500);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed

private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
    DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
    String prcntge = percentageField.getText();
    int size = model.getRowCount();
    int total = 0;
    ClassServiceInterface chserv = new ClassServiceImplementation();
    for (int i = 0; i < size; i++) {
        total += Integer.parseInt(model.getValueAt(i, 1).toString());
    }

    if (total != 100) {
        JOptionPane.showMessageDialog(null, "Total percentage must be 100%!", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to save the changes you made?", "Confim", JOptionPane.YES_NO_OPTION);
        if (confirm == 0) {

            if (!prcntge.isEmpty()) {
                try {
                    chserv.insertPassingRate(userCurrent.getClassID(), Integer.parseInt(prcntge));
                } catch (ErrorException ex) {
                    ex.printStackTrace();
                }
            }
            for (int i = 0; i < size; i++) {
                GradingSystemServiceInterface gradSys = new GradingSystemServiceImplementation();
                GradingSystem gsystem = new GradingSystem();
                gsystem.setPercentage(model.getValueAt(i, 1).toString());
                gsystem.setEntryName(model.getValueAt(i, 0).toString());
                gsystem.setClassID(userCurrent.getClassID());
                try {
                    gradSys.updateGradingSystem(gsystem);
                } catch (ErrorException ex) {
                    ex.printStackTrace();
                }
            }


            this.dispose();
            JOptionPane.showMessageDialog(this, "Successfully updated Grading System!", "Successful", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}//GEN-LAST:event_saveActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField percentageField;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
