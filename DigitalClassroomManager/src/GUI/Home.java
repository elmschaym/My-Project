/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Accounts;
import model.CurrentUser;
import model.GradingSystem;
import model.SecurityCode;
import model.User;
import service.implementations.AccountsServiceImplementation;
import service.implementations.SecurityCodeServiceImplementation;
import service.implementations.UserServiceImplementation;
import service.interfaces.AccountsServiceInterface;
import service.interfaces.SecurityCodeServiceInterface;
import service.interfaces.UserServiceInterface;
import tools.ErrorException;
import tools.FormatTool;
import tools.Transparent;

/**
 *
 * @author sam
 */
public class Home extends javax.swing.JFrame {

    File file;
    Object object;
    FormatTool formatTool = new FormatTool();
    CurrentUser current = new CurrentUser();
    Date dates = new Date();
    JFileChooser fc = new JFileChooser();
    private GradingSystem fromGradeDialog = new GradingSystem();
    boolean ready = false;
    boolean isAdminEmpty=false;

    /**
     * Creates new form Home
     */
    public Home() {
        Transparent trans = new Transparent();
        trans.TransparentForm(this);
        initComponents();
        this.setSize(800, 500);
        this.setLocationRelativeTo(null);
        Register.setVisible(false);
        checkUserType();
        jScrollPane1.setAutoscrolls(true);
        int day = dates.getDay();
        currentDay.setText(formatTool.currentDay(day));
        date.setText(formatTool.convertSQLDateToDateString(formatTool.conveter(dates.toLocaleString())));
        date.requestFocus();
        idCheck.setVisible(false);
        userNameCheck.setVisible(false);
        passCheck.setVisible(false);
        conPassCheck.setVisible(false);
        password.setVisible(false);
        idNumberError.setVisible(false);
        usernameWarning.setVisible(false);
        passwordWarning.setForeground(Color.black);
        passWarn1.setVisible(false);
        passWarn2.setVisible(false);
    }
    public void checkUserType(){
        UserServiceInterface userService=new UserServiceImplementation();
        User sr=new User();
        try {
            sr=userService.getUserTypeID(1);
        } catch (ErrorException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(sr.isEmpty()){
            Login.setVisible(false);
            Register.setVisible(true);
            isAdminEmpty=true;
        }
    
    }
    public void logIN() {
        String usrName = username.getText();
        String userPass = password.getText();
        Accounts st = new Accounts();
        AccountsServiceInterface serviceAcc = new AccountsServiceImplementation();
        // ArrayList<Accounts> accountSearch=new ArrayList<Accounts>();
        try {
            st = serviceAcc.getAccount(usrName);
        } catch (ErrorException ex) {
            ex.printStackTrace();
        }
        if (st.isEmpty()) {
            date.requestFocus();
            JOptionPane.showMessageDialog(this, "Invalid Account!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            if (st.getUsername().equals(usrName) && !st.getPassword().equals(userPass)) {
                JOptionPane.showMessageDialog(this, "Wrong Password!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (st.getUsername().equals(usrName)) {
                if (st.getPassword().equals(userPass)) {
                    current.setCurrentUser(usrName);
                    current.setUserID(st.getUserID());
                    UserHome home = new UserHome(current, fromGradeDialog );
                    home.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Username has not yet been registered!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Username has not yet been registered!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        Login = new javax.swing.JPanel();
        currentDay = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        passwordText = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        cancel = new javax.swing.JButton();
        login = new javax.swing.JButton();
        signUp = new javax.swing.JButton();
        background = new javax.swing.JLabel();
        Register = new javax.swing.JPanel();
        cancelReg = new javax.swing.JButton();
        register = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        rfacultyID = new javax.swing.JTextField();
        ruserName = new javax.swing.JTextField();
        rpasswordText = new javax.swing.JTextField();
        rpassWord = new javax.swing.JPasswordField();
        rconPassText = new javax.swing.JTextField();
        rconfirmPassWord = new javax.swing.JPasswordField();
        rlastName = new javax.swing.JTextField();
        rfirstName = new javax.swing.JTextField();
        rmiddleName = new javax.swing.JTextField();
        securityCode = new javax.swing.JTextField();
        profilePic = new javax.swing.JLabel();
        browsePic = new javax.swing.JButton();
        rCity = new javax.swing.JTextField();
        rProvince = new javax.swing.JTextField();
        rmobileContact = new javax.swing.JTextField();
        remailAdd = new javax.swing.JTextField();
        passwordWarning = new javax.swing.JLabel();
        passCheck = new javax.swing.JLabel();
        conPassCheck = new javax.swing.JLabel();
        userNameCheck = new javax.swing.JLabel();
        idCheck = new javax.swing.JLabel();
        idNumberError = new javax.swing.JLabel();
        usernameWarning = new javax.swing.JLabel();
        passWarn1 = new javax.swing.JLabel();
        passWarn2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));

        Login.setOpaque(false);
        Login.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                LoginFocusLost(evt);
            }
        });
        Login.setLayout(null);

        currentDay.setFont(new java.awt.Font("DK Crayon Crumble", 0, 18));
        currentDay.setText("Monday");
        Login.add(currentDay);
        currentDay.setBounds(280, 220, 180, 24);

        date.setFont(new java.awt.Font("DK Crayon Crumble", 0, 18));
        date.setForeground(new java.awt.Color(255, 255, 255));
        date.setText("September 25, 2013");
        Login.add(date);
        date.setBounds(280, 240, 180, 24);

        username.setFont(new java.awt.Font("Arial", 0, 15));
        username.setText("username");
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameKeyReleased(evt);
            }
        });
        Login.add(username);
        username.setBounds(280, 270, 210, 24);

        passwordText.setFont(new java.awt.Font("Arial", 0, 15));
        passwordText.setText("password");
        passwordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextActionPerformed(evt);
            }
        });
        passwordText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTextFocusLost(evt);
            }
        });
        passwordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTextKeyReleased(evt);
            }
        });
        Login.add(passwordText);
        passwordText.setBounds(280, 300, 210, 24);

        password.setFont(new java.awt.Font("Arial", 0, 15));
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFocusLost(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordKeyReleased(evt);
            }
        });
        Login.add(password);
        password.setBounds(280, 300, 210, 24);

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/exit.jpg"))); // NOI18N
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        Login.add(cancel);
        cancel.setBounds(410, 360, 80, 20);

        login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/login.jpg"))); // NOI18N
        login.setPreferredSize(new java.awt.Dimension(233, 40));
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                loginKeyReleased(evt);
            }
        });
        Login.add(login);
        login.setBounds(410, 330, 80, 20);

        signUp.setFont(new java.awt.Font("DK Crayon Crumble", 1, 20));
        signUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/signUp.jpg"))); // NOI18N
        signUp.setBorder(null);
        signUp.setOpaque(false);
        signUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpActionPerformed(evt);
            }
        });
        signUp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                signUpFocusLost(evt);
            }
        });
        Login.add(signUp);
        signUp.setBounds(280, 390, 200, 30);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Login.png"))); // NOI18N
        background.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                backgroundKeyReleased(evt);
            }
        });
        Login.add(background);
        background.setBounds(230, 0, 310, 500);

        Login.setBounds(0, 0, 800, 500);
        jLayeredPane1.add(Login, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Register.setOpaque(false);
        Register.setLayout(null);

        cancelReg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cancel.jpg"))); // NOI18N
        cancelReg.setBorder(null);
        cancelReg.setFocusPainted(false);
        cancelReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelRegActionPerformed(evt);
            }
        });
        Register.add(cancelReg);
        cancelReg.setBounds(350, 460, 100, 20);

        register.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/registerButton.jpg"))); // NOI18N
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });
        Register.add(register);
        register.setBounds(460, 460, 100, 20);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setHorizontalScrollBar(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rfacultyID.setFont(new java.awt.Font("Arial", 0, 15));
        rfacultyID.setText("id number");
        rfacultyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rfacultyIDActionPerformed(evt);
            }
        });
        rfacultyID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rfacultyIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rfacultyIDFocusLost(evt);
            }
        });
        rfacultyID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rfacultyIDKeyTyped(evt);
            }
        });
        jPanel1.add(rfacultyID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 278, -1));

        ruserName.setFont(new java.awt.Font("Arial", 0, 15));
        ruserName.setText("username");
        ruserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ruserNameActionPerformed(evt);
            }
        });
        ruserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ruserNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ruserNameFocusLost(evt);
            }
        });
        jPanel1.add(ruserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 278, -1));

        rpasswordText.setFont(new java.awt.Font("Arial", 0, 15));
        rpasswordText.setText("password");
        rpasswordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpasswordTextActionPerformed(evt);
            }
        });
        rpasswordText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rpasswordTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rpasswordTextFocusLost(evt);
            }
        });
        rpasswordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rpasswordTextKeyTyped(evt);
            }
        });
        jPanel1.add(rpasswordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 278, -1));

        rpassWord.setFont(new java.awt.Font("Arial", 0, 15));
        rpassWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpassWordActionPerformed(evt);
            }
        });
        rpassWord.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rpassWordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rpassWordFocusLost(evt);
            }
        });
        rpassWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rpassWordKeyTyped(evt);
            }
        });
        jPanel1.add(rpassWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 278, -1));

        rconPassText.setFont(new java.awt.Font("Arial", 0, 15));
        rconPassText.setText("confirm password");
        rconPassText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rconPassTextActionPerformed(evt);
            }
        });
        rconPassText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rconPassTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rconPassTextFocusLost(evt);
            }
        });
        jPanel1.add(rconPassText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 278, -1));

        rconfirmPassWord.setFont(new java.awt.Font("Arial", 0, 15));
        rconfirmPassWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rconfirmPassWordActionPerformed(evt);
            }
        });
        rconfirmPassWord.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rconfirmPassWordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rconfirmPassWordFocusLost(evt);
            }
        });
        jPanel1.add(rconfirmPassWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 278, -1));

        rlastName.setFont(new java.awt.Font("Arial", 0, 15));
        rlastName.setText("last name");
        rlastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rlastNameActionPerformed(evt);
            }
        });
        rlastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rlastNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rlastNameFocusLost(evt);
            }
        });
        jPanel1.add(rlastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 278, -1));

        rfirstName.setFont(new java.awt.Font("Arial", 0, 15));
        rfirstName.setText("first name");
        rfirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rfirstNameActionPerformed(evt);
            }
        });
        rfirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rfirstNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rfirstNameFocusLost(evt);
            }
        });
        jPanel1.add(rfirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 278, -1));

        rmiddleName.setFont(new java.awt.Font("Arial", 0, 15));
        rmiddleName.setText("middle name");
        rmiddleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmiddleNameActionPerformed(evt);
            }
        });
        rmiddleName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rmiddleNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rmiddleNameFocusLost(evt);
            }
        });
        jPanel1.add(rmiddleName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 278, -1));

        securityCode.setFont(new java.awt.Font("Arial", 0, 15));
        securityCode.setText("security code");
        securityCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                securityCodeActionPerformed(evt);
            }
        });
        securityCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                securityCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                securityCodeFocusLost(evt);
            }
        });
        jPanel1.add(securityCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 610, 276, -1));

        profilePic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/proIcon.jpg"))); // NOI18N
        profilePic.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(profilePic, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        browsePic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/browse.jpg"))); // NOI18N
        browsePic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsePicActionPerformed(evt);
            }
        });
        jPanel1.add(browsePic, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 100, 25));

        rCity.setFont(new java.awt.Font("Arial", 0, 15));
        rCity.setText("city");
        rCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rCityActionPerformed(evt);
            }
        });
        rCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rCityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rCityFocusLost(evt);
            }
        });
        jPanel1.add(rCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 278, -1));

        rProvince.setFont(new java.awt.Font("Arial", 0, 15));
        rProvince.setText("province");
        rProvince.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rProvinceActionPerformed(evt);
            }
        });
        rProvince.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rProvinceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rProvinceFocusLost(evt);
            }
        });
        jPanel1.add(rProvince, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 278, -1));

        rmobileContact.setFont(new java.awt.Font("Arial", 0, 15));
        rmobileContact.setText("contact number");
        rmobileContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmobileContactActionPerformed(evt);
            }
        });
        rmobileContact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                rmobileContactFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                rmobileContactFocusLost(evt);
            }
        });
        rmobileContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rmobileContactKeyTyped(evt);
            }
        });
        jPanel1.add(rmobileContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 276, -1));

        remailAdd.setFont(new java.awt.Font("Arial", 0, 15));
        remailAdd.setText("email address");
        remailAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remailAddActionPerformed(evt);
            }
        });
        remailAdd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                remailAddFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                remailAddFocusLost(evt);
            }
        });
        jPanel1.add(remailAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 276, -1));

        passwordWarning.setFont(new java.awt.Font("Tahoma", 0, 9));
        passwordWarning.setText("(minimum of 6 characters)");
        jPanel1.add(passwordWarning, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, 10));

        passCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/check.jpg"))); // NOI18N
        jPanel1.add(passCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, 25));

        conPassCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/check.jpg"))); // NOI18N
        jPanel1.add(conPassCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, -1, 25));

        userNameCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/check.jpg"))); // NOI18N
        jPanel1.add(userNameCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, -1, 25));

        idCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/check.jpg"))); // NOI18N
        jPanel1.add(idCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, 25));

        idNumberError.setForeground(new java.awt.Color(255, 0, 0));
        idNumberError.setText("ID number already registered!");
        jPanel1.add(idNumberError, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        usernameWarning.setForeground(new java.awt.Color(255, 0, 0));
        usernameWarning.setText("Username already taken!");
        jPanel1.add(usernameWarning, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        passWarn1.setForeground(new java.awt.Color(255, 0, 0));
        passWarn1.setText("Password mismatch!");
        jPanel1.add(passWarn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        passWarn2.setForeground(new java.awt.Color(255, 0, 0));
        passWarn2.setText("Please re-type your password again!");
        jPanel1.add(passWarn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, 20));

        jLabel2.setText("*");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 610, -1, 20));

        jLabel3.setText("*");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 374, -1, 20));

        jLabel4.setText("*");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, -1, 20));

        jLabel5.setText("*");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, -1, 20));

        jScrollPane1.setViewportView(jPanel1);

        Register.add(jScrollPane1);
        jScrollPane1.setBounds(210, 110, 360, 340);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/SignUp.png"))); // NOI18N
        Register.add(jLabel1);
        jLabel1.setBounds(190, 0, 400, 500);

        Register.setBounds(0, 0, 800, 500);
        jLayeredPane1.add(Register, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPane1);
        jLayeredPane1.setBounds(0, 0, 800, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void usernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusGained
        // TODO add your handling code here:

        username.setBackground(Color.white);
        password.setBackground(Color.white);
        if ("username".equals(username.getText())) {
            username.setText("");
        }
    }//GEN-LAST:event_usernameFocusGained

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost
        // TODO add your handling code here:
        if ("".equals(username.getText())) {
            username.setText("username");
        }
    }//GEN-LAST:event_usernameFocusLost

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        // TODO add your handling code here:
        username.setBackground(Color.white);
        password.setBackground(Color.white);
        password.setText("");
    }//GEN-LAST:event_passwordFocusGained

    private void passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusLost
        // TODO add your handling code here:
        password.setBackground(Color.white);
        if ("".equals(password.getText())) {
            passwordText.setVisible(true);
            password.setVisible(false);
        }
    }//GEN-LAST:event_passwordFocusLost

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to close this application?", "Confim", JOptionPane.YES_NO_OPTION);
        if (confirm == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_cancelActionPerformed

    private void signUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpActionPerformed
        // TODO add your handling code here:
        Login.setVisible(false);
        Register.setVisible(true);
        username.setText("username");
        password.setVisible(false);
        passwordText.setVisible(true);
        passwordText.setText("password");
    }//GEN-LAST:event_signUpActionPerformed

    private void ruserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ruserNameActionPerformed
        // TODO add your handling code here:
        rpassWord.requestFocus();
        rpasswordText.setVisible(false);
        rpassWord.setVisible(true);
    }//GEN-LAST:event_ruserNameActionPerformed

    private void ruserNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ruserNameFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(ruserName.getBounds());
        usernameWarning.setVisible(false);
        if ("username".equals(ruserName.getText())) {
            ruserName.setText(null);
        }
    }//GEN-LAST:event_ruserNameFocusGained

    private void ruserNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ruserNameFocusLost
        AccountsServiceInterface accServiceCheck = new AccountsServiceImplementation();

        Accounts accountCheck = new Accounts();
        try {
            accountCheck = accServiceCheck.getAccount(ruserName.getText());
        } catch (ErrorException ex) {
            ex.printStackTrace();
        }
        if (!accountCheck.isEmpty()) {
            usernameWarning.setVisible(true);
            userNameCheck.setVisible(false);
        } else {
            userNameCheck.setVisible(true);
            usernameWarning.setVisible(false);
        }
        if ("".equals(ruserName.getText())) {
            ruserName.setText("username");
            userNameCheck.setVisible(false);
        }
    }//GEN-LAST:event_ruserNameFocusLost

    private void rpassWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpassWordActionPerformed
        // TODO add your handling code here:
        rconfirmPassWord.requestFocus();
        rconPassText.setVisible(false);
        rconfirmPassWord.setVisible(true);
    }//GEN-LAST:event_rpassWordActionPerformed

    private void rpassWordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rpassWordFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rpassWord.getBounds());
        rpassWord.setText(null);
        passCheck.setVisible(false);
    }//GEN-LAST:event_rpassWordFocusGained

    private void rpassWordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rpassWordFocusLost
        // TODO add your handling code here:
        if ("".equals(rpassWord.getText())) {
            rpassWord.setVisible(false);
            rpasswordText.setVisible(true);
        } else if (rpassWord.getText().length() < 6) {
            passwordWarning.setForeground(Color.red);
            passCheck.setVisible(false);
        } else {
            passwordWarning.setForeground(Color.BLACK);
            passCheck.setVisible(true);
        }

    }//GEN-LAST:event_rpassWordFocusLost

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        // TODO add your handling code here:
        String accID = rfacultyID.getText();
        String usrName = ruserName.getText();
        String userPass = rpassWord.getText();
        String userConfirmPass = rconfirmPassWord.getText();
        String fName = rfirstName.getText();
        if (fName.equals("first name")) {
            fName = "";
        }
        String lName = rlastName.getText();
        if (lName.equals("last name")) {
            lName = "";
        }
        String mName = rmiddleName.getText();
        if (mName.equals("middle name")) {
            mName = "";
        }
        String city = rCity.getText();
        if (city.equals("city")) {
            city = "";
        }
        String province = rProvince.getText();
        if (province.equals("province")) {
            province = "";
        }
        String contactNum = rmobileContact.getText();
        if (contactNum.equals("contact number")) {
            contactNum = "";
        }
        String email = remailAdd.getText();
        if (email.equals("email address"));
        email = "";
        String setCodeChecker = securityCode.getText();
        SecurityCodeServiceInterface securityService = new SecurityCodeServiceImplementation();
        SecurityCode security = new SecurityCode();
        UserServiceInterface userService = new UserServiceImplementation();
        AccountsServiceInterface accService = new AccountsServiceImplementation();
        AccountsServiceInterface accServicecheck = new AccountsServiceImplementation();
        User user = new User();
        Accounts account = new Accounts();
        Accounts idCheck = new Accounts();
        Accounts usernameCheck = new Accounts();
        int pwLength = userPass.length();

        if (accID.equals("id number")) {
            JOptionPane.showMessageDialog(this, "Please provide your ID number!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {


            try {
                security = securityService.getSecurityCode(setCodeChecker);
            } catch (ErrorException ex) {
                ex.printStackTrace();
            }

            try {
                idCheck = accService.getAccount(Integer.parseInt(rfacultyID.getText()));
            } catch (ErrorException ex) {
                ex.printStackTrace();
            }

            try {
                usernameCheck = accService.getAccount((ruserName.getText()));
            } catch (ErrorException ex) {
                ex.printStackTrace();
            }


            if (!idCheck.isEmpty()) {
                JOptionPane.showMessageDialog(this, "ID Number already registered!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!usernameCheck.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Username already taken!\nPlease try another", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (pwLength < 6 || pwLength > 15) {
                JOptionPane.showMessageDialog(this, "Password must be between 6 to 15 characters!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!userPass.equals(userConfirmPass) && !userPass.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Password Mismatch!\nPlease Type in your password again!", "Error", JOptionPane.ERROR_MESSAGE);
                rconfirmPassWord.setText("");
                rconfirmPassWord.setVisible(false);
                rconPassText.setVisible(true);
                rpassWord.requestFocus();
            } else if (accID.isEmpty() || usrName.isEmpty() || userPass.isEmpty()
                    || userConfirmPass.isEmpty() || fName.isEmpty() || lName.isEmpty() || mName.isEmpty()
                    || setCodeChecker.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Empty Fields!\nPlease fill all the required fields!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (security.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Invalid Security Code!\nTry again or ask your system administrator for the correct code! ", "Error", JOptionPane.ERROR_MESSAGE);
                securityCode.requestFocus();
            } else {
                account.setUserID(Integer.parseInt(accID));
                account.setUsername(usrName);
                account.setPassword(userPass);
                object = file;

                user.setFirstName(fName);
                user.setLastName(lName);
                user.setMiddleName(mName);
                user.setImage(object);

                user.setCity(city);
                user.setProvince(province);
                user.setContactNum(contactNum);
                user.setEmailAdd(email);
                if(isAdminEmpty){
                   user.setUserType(1);
                }else{
                    user.setUserType(2);
                }
                    
                user.setUserID(Integer.parseInt(accID));
                //account.setUsername(userName);
                try {
                    userService.addUser(user);
                    accService.addAccounts(account);
                } catch (ErrorException ex) {
                    ex.printStackTrace();
                }

                current.setUserID(Integer.parseInt(accID));
                current.setCurrentUser(usrName);
                this.dispose();

                UserHome cHome = new UserHome(current, null);
                cHome.setVisible(true);
                cancelReg();
            }
        }
    }//GEN-LAST:event_registerActionPerformed

    private void rconfirmPassWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rconfirmPassWordActionPerformed
        // TODO add your handling code here:
        rlastName.requestFocus();
    }//GEN-LAST:event_rconfirmPassWordActionPerformed

    private void rconfirmPassWordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rconfirmPassWordFocusGained
        // TODO add your handling code here:
        passWarn1.setVisible(false);
        passWarn2.setVisible(false);
        jPanel1.scrollRectToVisible(rconfirmPassWord.getBounds());
        rconfirmPassWord.setText(null);
        conPassCheck.setVisible(false);
    }//GEN-LAST:event_rconfirmPassWordFocusGained

    private void rconfirmPassWordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rconfirmPassWordFocusLost
        // TODO add your handling code here:
        if ("".equals(rconfirmPassWord.getText())) {
            rconfirmPassWord.setVisible(false);
            rconPassText.setVisible(true);
        } else if (!"".equals(rpassWord.getText())) {
            if (!rconfirmPassWord.getText().equals(rpassWord.getText())) {
                passWarn1.setVisible(true);
                passWarn2.setVisible(true);
                conPassCheck.setVisible(false);
            } else {
                passWarn1.setVisible(false);
                passWarn2.setVisible(false);
                conPassCheck.setVisible(true);
            }
        }

    }//GEN-LAST:event_rconfirmPassWordFocusLost

    private void rlastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rlastNameActionPerformed
        // TODO add your handling code here:
        rfirstName.requestFocus();
    }//GEN-LAST:event_rlastNameActionPerformed

    private void rlastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rlastNameFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rlastName.getBounds());
        if ("last name".equals(rlastName.getText())) {
            rlastName.setText(null);
            rlastName.setBackground(Color.white);
        }
    }//GEN-LAST:event_rlastNameFocusGained

    private void rlastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rlastNameFocusLost
        // TODO add your handling code here:if ("last name".equals(lastName.getText()))
        if ("".equals(rlastName.getText())) {
            rlastName.setText("last name");
        }
    }//GEN-LAST:event_rlastNameFocusLost

    private void rfirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rfirstNameActionPerformed
        // TODO add your handling code here:
        rmiddleName.requestFocus();
    }//GEN-LAST:event_rfirstNameActionPerformed

    private void rfirstNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rfirstNameFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rfirstName.getBounds());
        if ("first name".equals(rfirstName.getText())) {
            rfirstName.setText(null);
            rfirstName.setBackground(Color.white);
        }
    }//GEN-LAST:event_rfirstNameFocusGained

    private void rfirstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rfirstNameFocusLost
        // TODO add your handling code here:
        if ("".equals(rfirstName.getText())) {
            rfirstName.setText("first name");
        }
    }//GEN-LAST:event_rfirstNameFocusLost

    private void rmiddleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmiddleNameActionPerformed
        // TODO add your handling code here:
        rCity.requestFocus();
    }//GEN-LAST:event_rmiddleNameActionPerformed

    private void rmiddleNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rmiddleNameFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rmiddleName.getBounds());
        if ("middle name".equals(rmiddleName.getText())) {
            rmiddleName.setText(null);
            rmiddleName.setBackground(Color.white);
        }
    }//GEN-LAST:event_rmiddleNameFocusGained

    private void rmiddleNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rmiddleNameFocusLost
        // TODO add your handling code here:
        if ("".equals(rmiddleName.getText())) {
            rmiddleName.setText("middle name");
        }
    }//GEN-LAST:event_rmiddleNameFocusLost

    private void cancelRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelRegActionPerformed
        // TODO add your handling code here:
        Register.setVisible(false);
        Login.setVisible(true);
        cancelReg();
    }//GEN-LAST:event_cancelRegActionPerformed

    private void signUpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_signUpFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_signUpFocusLost

    private void rfacultyIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rfacultyIDFocusLost
        AccountsServiceInterface accServiceCheck = new AccountsServiceImplementation();

        Accounts accountCheck = new Accounts();
        if (!rfacultyID.getText().isEmpty()) {
            try {
                accountCheck = accServiceCheck.getAccount(Integer.parseInt(rfacultyID.getText()));
            } catch (ErrorException ex) {
                ex.printStackTrace();
            }
            if (!accountCheck.isEmpty()) {
                idNumberError.setVisible(true);
                idCheck.setVisible(false);
            } else if (rfacultyID.getText().equals("id number")) {
                idCheck.setVisible(false);
            } else {
                idNumberError.setVisible(false);
                idCheck.setVisible(true);
            }
        }
        if ("".equals(rfacultyID.getText())) {
            rfacultyID.setText("id number");
        }
    }//GEN-LAST:event_rfacultyIDFocusLost

    private void rfacultyIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rfacultyIDFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rfacultyID.getBounds());
        idNumberError.setVisible(false);
        if (("id number".equals(rfacultyID.getText()))) {
            rfacultyID.setText(null);
            rfacultyID.setBackground(Color.white);
        }

    }//GEN-LAST:event_rfacultyIDFocusGained

    private void rfacultyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rfacultyIDActionPerformed
        // TODO add your handling code here:
        ruserName.requestFocus();
    }//GEN-LAST:event_rfacultyIDActionPerformed

    private void rfacultyIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rfacultyIDKeyTyped

        char c = evt.getKeyChar();

        if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_rfacultyIDKeyTyped

    private void securityCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_securityCodeActionPerformed
        // TODO add your handling code here:
        register.doClick();
    }//GEN-LAST:event_securityCodeActionPerformed

    private void securityCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_securityCodeFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(securityCode.getBounds());
        if (("security code".equals(securityCode.getText()))) {
            securityCode.setText(null);
            securityCode.setBackground(Color.white);
        }
    }//GEN-LAST:event_securityCodeFocusGained

    private void securityCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_securityCodeFocusLost
        // TODO add your handling code here:
        if (("".equals(securityCode.getText()))) {
            securityCode.setText("security code");
        }
    }//GEN-LAST:event_securityCodeFocusLost

    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        logIN();
    }//GEN-LAST:event_loginActionPerformed

private void loginKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginKeyReleased
    logIN();
}//GEN-LAST:event_loginKeyReleased

private void backgroundKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_backgroundKeyReleased
    int keyNumber = evt.getKeyCode();
    //char key=evt.getKeyChar();
    if (keyNumber == KeyEvent.VK_ENTER) {
        logIN();
    }
}//GEN-LAST:event_backgroundKeyReleased

private void passwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyReleased
    int keyNumber = evt.getKeyCode();
    //char key=evt.getKeyChar();
    if (keyNumber == KeyEvent.VK_ENTER) {
        logIN();
    }
}//GEN-LAST:event_passwordKeyReleased

private void usernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyReleased
    int keyNumber = evt.getKeyCode();
    if (keyNumber == KeyEvent.VK_ENTER) {
        passwordText.setVisible(false);
        password.setVisible(true);
        password.requestFocus();
    }
}//GEN-LAST:event_usernameKeyReleased

    private void browsePicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsePicActionPerformed
        // TODO add your handling code here:
        file = fc.getSelectedFile();
        StringTokenizer token = null;

        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "JPG & PNG Images", "jpg", "png");
        fc.setFileFilter(filter);

        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {

            file = fc.getSelectedFile();
            // bmp, gif, jpg, png files okay

            Image image = Toolkit.getDefaultToolkit().getImage(file.toString()).getScaledInstance(formatTool.IMAGE_WIDTH, formatTool.IMAGE_HEIGHT, 100);
            object = new ImageIcon(image);
            this.profilePic.setIcon((Icon) object);
        } else {
            System.out.println("Cannot open file!");
        }
    }//GEN-LAST:event_browsePicActionPerformed

    private void rCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rCityActionPerformed
        // TODO add your handling code here:
        rProvince.requestFocus();
    }//GEN-LAST:event_rCityActionPerformed

    private void rCityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rCityFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rCity.getBounds());
        if ("city".equals(rCity.getText())) {
            rCity.setText(null);
            rCity.setBackground(Color.white);
        }
    }//GEN-LAST:event_rCityFocusGained

    private void rCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rCityFocusLost
        // TODO add your handling code here:if ("".equals(rmiddleName.getText()))
        if ("".equals(rCity.getText())) {
            rCity.setText("city");
        }
    }//GEN-LAST:event_rCityFocusLost

    private void rProvinceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rProvinceActionPerformed
        // TODO add your handling code here:
        rmobileContact.requestFocus();
    }//GEN-LAST:event_rProvinceActionPerformed

    private void rProvinceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rProvinceFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rProvince.getBounds());
        if ("province".equals(rProvince.getText())) {
            rProvince.setText(null);
            rProvince.setBackground(Color.white);
        }
    }//GEN-LAST:event_rProvinceFocusGained

    private void rProvinceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rProvinceFocusLost
        // TODO add your handling code here:
        if ("".equals(rProvince.getText())) {
            rProvince.setText("province");
        }
    }//GEN-LAST:event_rProvinceFocusLost

    private void rmobileContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmobileContactActionPerformed
        // TODO add your handling code here:
        remailAdd.requestFocus();
    }//GEN-LAST:event_rmobileContactActionPerformed

    private void rmobileContactFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rmobileContactFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(rmobileContact.getBounds());
        if ("contact number".equals(rmobileContact.getText())) {
            rmobileContact.setText(null);
            rmobileContact.setBackground(Color.white);
        }
    }//GEN-LAST:event_rmobileContactFocusGained

    private void rmobileContactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rmobileContactFocusLost
        // TODO add your handling code here:
        if ("".equals(rmobileContact.getText())) {
            rmobileContact.setText("contact number");
        }
    }//GEN-LAST:event_rmobileContactFocusLost

    private void remailAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remailAddActionPerformed
        // TODO add your handling code here:
        securityCode.requestFocus();
    }//GEN-LAST:event_remailAddActionPerformed

    private void remailAddFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_remailAddFocusGained
        // TODO add your handling code here:
        jPanel1.scrollRectToVisible(remailAdd.getBounds());
        if ("email address".equals(remailAdd.getText())) {
            remailAdd.setText(null);
            remailAdd.setBackground(Color.white);
        }
    }//GEN-LAST:event_remailAddFocusGained

    private void remailAddFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_remailAddFocusLost
        // TODO add your handling code here:
        if ("".equals(remailAdd.getText())) {
            remailAdd.setText("email address");
        }
    }//GEN-LAST:event_remailAddFocusLost

    private void rmobileContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rmobileContactKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if (!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_BACK_SPACE)
                || (c == KeyEvent.VK_DELETE))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_rmobileContactKeyTyped

    private void passwordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextActionPerformed

    private void passwordTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusGained
        // TODO add your handling code here:
        passwordText.setVisible(false);
        password.setVisible(true);
        password.requestFocus();
    }//GEN-LAST:event_passwordTextFocusGained

    private void passwordTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFocusLost

    private void passwordTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextKeyReleased

    private void LoginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LoginFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginFocusLost

    private void rpasswordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpasswordTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpasswordTextActionPerformed

    private void rpasswordTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rpasswordTextFocusGained
        // TODO add your handling code here:
        rpassWord.setVisible(true);
        rpasswordText.setVisible(false);
    }//GEN-LAST:event_rpasswordTextFocusGained

    private void rpasswordTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rpasswordTextFocusLost
        // TODO add your handling code here:
        rpassWord.requestFocus();
    }//GEN-LAST:event_rpasswordTextFocusLost

    private void rconPassTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rconPassTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rconPassTextActionPerformed

    private void rconPassTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rconPassTextFocusGained
        // TODO add your handling code here:
        rconfirmPassWord.setVisible(true);
        rconPassText.setVisible(false);
    }//GEN-LAST:event_rconPassTextFocusGained

    private void rconPassTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_rconPassTextFocusLost
        // TODO add your handling code here:
        rconfirmPassWord.requestFocus();
    }//GEN-LAST:event_rconPassTextFocusLost

    private void rpassWordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rpassWordKeyTyped
        // TODO add your handling code here:
        int count = rpassWord.getText().length();

        if (count < 5) {
            passwordWarning.setForeground(Color.red);
            passCheck.setVisible(false);
        } else {
            passwordWarning.setForeground(Color.black);
            passCheck.setVisible(true);
        }
    }//GEN-LAST:event_rpassWordKeyTyped

private void rpasswordTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rpasswordTextKeyTyped
// TODO add your handling code here:
}//GEN-LAST:event_rpasswordTextKeyTyped

    private void cancelReg() {
        profilePic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/proIcon.jpg")));
        rfacultyID.setText("id number");
        ruserName.setText("username");
        rpassWord.setText("");
        rconfirmPassWord.setText("");
        rlastName.setText("last name");
        rfirstName.setText("first name");
        rmiddleName.setText("middle name");
        securityCode.setText("security code");
        rCity.setText("city");
        rProvince.setText("province");
        rmobileContact.setText("contact number");
        remailAdd.setText("email address");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Login;
    private javax.swing.JPanel Register;
    private javax.swing.JLabel background;
    private javax.swing.JButton browsePic;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cancelReg;
    private javax.swing.JLabel conPassCheck;
    private javax.swing.JLabel currentDay;
    private javax.swing.JLabel date;
    private javax.swing.JLabel idCheck;
    private javax.swing.JLabel idNumberError;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton login;
    private javax.swing.JLabel passCheck;
    private javax.swing.JLabel passWarn1;
    private javax.swing.JLabel passWarn2;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField passwordText;
    private javax.swing.JLabel passwordWarning;
    private javax.swing.JLabel profilePic;
    private javax.swing.JTextField rCity;
    private javax.swing.JTextField rProvince;
    private javax.swing.JTextField rconPassText;
    private javax.swing.JPasswordField rconfirmPassWord;
    private javax.swing.JButton register;
    private javax.swing.JTextField remailAdd;
    private javax.swing.JTextField rfacultyID;
    private javax.swing.JTextField rfirstName;
    private javax.swing.JTextField rlastName;
    private javax.swing.JTextField rmiddleName;
    private javax.swing.JTextField rmobileContact;
    private javax.swing.JPasswordField rpassWord;
    private javax.swing.JTextField rpasswordText;
    private javax.swing.JTextField ruserName;
    private javax.swing.JTextField securityCode;
    private javax.swing.JButton signUp;
    private javax.swing.JLabel userNameCheck;
    private javax.swing.JTextField username;
    private javax.swing.JLabel usernameWarning;
    // End of variables declaration//GEN-END:variables
}
